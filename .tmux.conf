# Set prefix to Ctrl-a (optional: more ergonomic than default Ctrl-b)
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind a send-prefix

# Enable mouse support (scroll, select panes, resize)
set -g mouse on

# Vi-style keybindings in copy mode (optional but widely preferred)
setw -g mode-keys vi

# Split windows (optional convenience)
bind | split-window -h
bind - split-window -v

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Start numbering at 1
set -g base-index 1

# Create a named new window
bind C command-prompt -p "Name of new window: " "new-window -n '%%'"

# Allows for faster key repetition
set -s escape-time 50

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Improve the status bar. The default status bar places the session ID
# to the left, but I rarely have more than one session. I do, however,
# care about the hostname, so hostname:session_id followed by month,
# day, and current time is useful context for the lower right.
set -g status-left " "
set -g status-right-length 60
set -g status-right " #h:#S  %b %d  %H:%M "

# If we support at least 256 colors, give the tmux status bar a nice
# amber glow, reminiscent of old amber phosphor CRTs. Also, render the
# active window with a slightly brighter background, so it stands out
# clearly.
if "[ $(tput colors) -ge 256 ]" {
  set -g status-left-style "fg=black bg=colour130"
  set -g status-right-style "bg=colour17 fg=orange"
  set -g status-style "fg=black bg=colour130"
  set -g message-style "fg=black bg=colour172"
  # Current window should be slightly brighter.
  set -g window-status-current-style "fg=black bg=colour172"
  # Windows with activity should be very subtly highlighted.
  set -g window-status-activity-style "fg=colour17 bg=colour130"
  set -g mode-style "fg=black bg=colour172"
}


# Copy to directly to system clipboard when in visual mode
# In copy mode (Vi), press 'v' to start selection
bind-key -T copy-mode-vi v send -X begin-selection

# Press 'y' to yank selection to system clipboard (macOS)
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
